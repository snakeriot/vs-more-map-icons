using Cairo;

namespace MoreMapIcons
{
    /**
     * Chicken icon.
     **/
    public class ChickenIcon : Icon
    {
        public float getHeight()
        {
            return 25;
        }

        public float getWidth()
        {
            return 25;
        }

        /**
        * I make egg.
        *
        * @param context - {@link Context}
        **/
        public void Render(Context cr)
        {
            cr.NewPath();
            cr.MoveTo(24.996094, 5.109375);
            cr.CurveTo(25.050781, 4.171875, 23.871094, 3.777344, 23.617188, 3.144531);
            cr.CurveTo(23.792969, 2.960938, 23.988281, 1.832031, 23.9375, 1.480469);
            cr.CurveTo(23.890625, 1.136719, 23.117188, 1.917969, 22.980469, 1.761719);
            cr.CurveTo(22.824219, 1.582031, 23.089844, 0.800781, 22.804688, 0.402344);
            cr.CurveTo(22.65625, 0.195313, 22.324219, 1.714844, 22.074219, 1.828125);
            cr.CurveTo(21.894531, 1.90625, 21.578125, 1.480469, 21.257813, 0.886719);
            cr.CurveTo(20.730469, -0.078125, 21.019531, 2.003906, 21.070313, 2.402344);
            cr.CurveTo(19.671875, 2.613281, 18.796875, 3.542969, 18.40625, 4.742188);
            cr.CurveTo(17.972656, 6.066406, 16.761719, 9.007813, 14.539063, 9.144531);
            cr.CurveTo(11.867188, 9.3125, 8.886719, 6.816406, 7.480469, 5.375);
            cr.CurveTo(6.730469, 4.613281, 6.183594, 2.410156, 4.875, 2.582031);
            cr.CurveTo(4.28125, 2.660156, 3.816406, 3.496094, 3.125, 3.675781);
            cr.CurveTo(3.125, 3.675781, -0.433594, 4.554688, 0.0429688, 5.507813);
            cr.CurveTo(0.328125, 6.070313, 1.882813, 6.808594, 3.070313, 7.308594);
            cr.CurveTo(3.121094, 7.328125, 3.152344, 7.386719, 3.132813, 7.441406);
            cr.CurveTo(3.117188, 7.496094, 3.0625, 7.53125, 3.007813, 7.519531);
            cr.CurveTo(1.988281, 7.339844, 0.976563, 7.300781, 1.988281, 8.171875);
            cr.CurveTo(2.238281, 8.386719, 3.175781, 8.835938, 4.058594, 9.238281);
            cr.CurveTo(4.109375, 9.261719, 4.136719, 9.324219, 4.117188, 9.378906);
            cr.CurveTo(4.097656, 9.433594, 4.042969, 9.464844, 3.984375, 9.449219);
            cr.CurveTo(3.273438, 9.277344, 2.625, 9.203125, 2.664063, 9.511719);
            cr.CurveTo(2.753906, 10.214844, 5.460938, 12.273438, 5.460938, 12.273438);
            cr.CurveTo(5.117188, 12.695313, 6.511719, 14.207031, 6.734375, 14.398438);
            cr.CurveTo(6.414063, 14.289063, 6.070313, 14.414063, 6.523438, 14.824219);
            cr.CurveTo(7.191406, 15.429688, 7.339844, 16.410156, 7.910156, 16.976563);
            cr.CurveTo(9.589844, 18.644531, 12.109375, 17.386719, 13.410156, 20.207031);
            cr.CurveTo(13.476563, 20.351563, 13.773438, 20.945313, 14.027344, 21.460938);
            cr.CurveTo(14.101563, 21.617188, 14.101563, 21.796875, 14.027344, 21.953125);
            cr.CurveTo(13.949219, 22.105469, 13.808594, 22.21875, 13.640625, 22.25);
            cr.LineTo(11.960938, 22.601563);
            cr.CurveTo(11.714844, 22.648438, 11.542969, 22.875, 11.566406, 23.128906);
            cr.CurveTo(11.59375, 23.402344, 11.835938, 23.601563, 12.105469, 23.578125);
            cr.LineTo(13.765625, 23.421875);
            cr.CurveTo(13.820313, 23.417969, 13.875, 23.445313, 13.902344, 23.496094);
            cr.CurveTo(13.929688, 23.542969, 13.921875, 23.605469, 13.886719, 23.648438);
            cr.LineTo(13.753906, 23.808594);
            cr.CurveTo(13.578125, 24.015625, 13.609375, 24.328125, 13.816406, 24.503906);
            cr.CurveTo(13.910156, 24.578125, 14.019531, 24.617188, 14.132813, 24.617188);
            cr.CurveTo(14.273438, 24.617188, 14.414063, 24.554688, 14.511719, 24.4375);
            cr.LineTo(15.210938, 23.597656);
            cr.CurveTo(15.34375, 23.4375, 15.554688, 23.363281, 15.757813, 23.410156);
            cr.LineTo(18.203125, 23.933594);
            cr.CurveTo(18.449219, 23.988281, 18.695313, 23.847656, 18.777344, 23.605469);
            cr.CurveTo(18.863281, 23.347656, 18.722656, 23.066406, 18.464844, 22.980469);
            cr.LineTo(16.257813, 22.242188);
            cr.CurveTo(16.054688, 22.175781, 15.910156, 22, 15.882813, 21.789063);
            cr.CurveTo(15.828125, 21.394531, 15.761719, 20.898438, 15.710938, 20.519531);
            cr.CurveTo(15.679688, 20.265625, 15.835938, 20.023438, 16.082031, 19.949219);
            cr.CurveTo(17.199219, 19.613281, 17.800781, 18.242188, 18.527344, 17.320313);
            cr.CurveTo(18.863281, 16.898438, 19.332031, 16.609375, 19.863281, 16.5);
            cr.CurveTo(22.757813, 15.910156, 23.738281, 12.902344, 24.042969, 9.722656);
            cr.CurveTo(24.222656, 7.847656, 23.339844, 7.089844, 22.875, 5.691406);
            cr.CurveTo(23.460938, 5.515625, 24.101563, 4.636719, 24.996094, 5.109375);
            cr.ClosePath();
            cr.MoveTo(21.8125, 4.0625);
            cr.CurveTo(21.597656, 4.0625, 21.425781, 3.890625, 21.425781, 3.675781);
            cr.CurveTo(21.425781, 3.457031, 21.597656, 3.28125, 21.8125, 3.28125);
            cr.CurveTo(22.035156, 3.28125, 22.203125, 3.457031, 22.203125, 3.675781);
            cr.CurveTo(22.203125, 3.890625, 22.03125, 4.0625, 21.8125, 4.0625);
            cr.ClosePath();
            cr.FillPreserve();
        }
    }
}