using Cairo;

namespace MoreMapIcons
{
    /**
     * Tree icon 2.
     **/
    public class TreeTwoIcon : Icon
    {

        public float getHeight()
        {
            return 374;
        }

        public float getWidth()
        {
            return 374;
        }

        /**
        * Draw my tree.
        *
        * @param context - {@link Context}
        **/
        public void Render(Context cr)
        {
            cr.NewPath();
            cr.MoveTo(205.910156, 325.9375);
            cr.LineTo(166.859375, 325.9375);
            cr.CurveTo(162.441406, 325.9375, 158.847656, 329.53125, 158.847656, 333.945313);
            cr.LineTo(158.847656, 365.988281);
            cr.CurveTo(158.847656, 370.40625, 162.441406, 374, 166.859375, 374);
            cr.LineTo(205.910156, 374);
            cr.CurveTo(210.328125, 374, 213.921875, 370.40625, 213.921875, 365.988281);
            cr.LineTo(213.921875, 333.945313);
            cr.CurveTo(213.921875, 329.53125, 210.328125, 325.9375, 205.910156, 325.9375);
            cr.ClosePath();
            cr.FillPreserve();

            cr.NewPath();
            cr.MoveTo(311.457031, 212.789063);
            cr.LineTo(307.546875, 212.789063);
            cr.CurveTo(311.234375, 205.828125, 313.378906, 197.585938, 313.378906, 188.753906);
            cr.CurveTo(313.378906, 165.257813, 298.25, 145.914063, 279.023438, 143.882813);
            cr.CurveTo(283.457031, 136.441406, 285.859375, 127.53125, 285.859375, 118.164063);
            cr.CurveTo(285.859375, 106.335938, 282.046875, 95.234375, 275.125, 86.898438);
            cr.CurveTo(268.007813, 78.324219, 258.425781, 73.605469, 248.152344, 73.605469);
            cr.LineTo(240.808594, 73.605469);
            cr.CurveTo(242.535156, 68.199219, 243.472656, 62.445313, 243.472656, 56.472656);
            cr.CurveTo(243.472656, 25.335938, 218.140625, 0, 187, 0);
            cr.CurveTo(155.859375, 0, 130.527344, 25.335938, 130.527344, 56.472656);
            cr.CurveTo(130.527344, 62.445313, 131.464844, 68.195313, 133.191406, 73.601563);
            cr.LineTo(125.84375, 73.601563);
            cr.CurveTo(115.570313, 73.601563, 105.992188, 78.324219, 98.871094, 86.898438);
            cr.CurveTo(91.953125, 95.230469, 88.140625, 106.335938, 88.140625, 118.160156);
            cr.CurveTo(88.140625, 127.53125, 90.542969, 136.4375, 94.976563, 143.882813);
            cr.CurveTo(75.75, 145.914063, 60.621094, 165.257813, 60.621094, 188.753906);
            cr.CurveTo(60.621094, 197.585938, 62.765625, 205.828125, 66.453125, 212.789063);
            cr.LineTo(62.542969, 212.789063);
            cr.CurveTo(41.753906, 212.789063, 24.839844, 233.226563, 24.839844, 258.347656);
            cr.CurveTo(24.839844, 283.46875, 41.757813, 303.90625, 62.542969, 303.90625);
            cr.LineTo(311.457031, 303.90625);
            cr.CurveTo(332.246094, 303.90625, 349.160156, 283.46875, 349.160156, 258.347656);
            cr.CurveTo(349.160156, 233.226563, 332.246094, 212.789063, 311.457031, 212.789063);
            cr.ClosePath();
            cr.MoveTo(311.457031, 212.789063);
            cr.FillPreserve();
        }
    }
}