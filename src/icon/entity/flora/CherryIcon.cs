using Cairo;

namespace MoreMapIcons
{
    /**
     * Cherry icon.
     **/
    public class CherryIcon : Icon
    {
        public float getHeight()
        {
            return 260;
        }

        public float getWidth()
        {
            return 260;
        }

        /**
        * Draw my cherry (yum).
        *
        * @param context - {@link Context}
        **/
        public void Render(Context cr)
        {
            cr.NewPath();
            cr.MoveTo(257.777344, 159.910156);
            cr.CurveTo(257.441406, 153.058594, 255.910156, 146.398438, 252.722656, 140.503906);
            cr.CurveTo(247.308594, 130.496094, 237.566406, 123.375, 226.617188, 120.519531);
            cr.CurveTo(210.261719, 116.25, 197.707031, 124.605469, 191.347656, 125.660156);
            cr.CurveTo(191.175781, 85.328125, 203.859375, 45.820313, 227.699219, 13.128906);
            cr.CurveTo(229.324219, 10.898438, 229.492188, 7.921875, 228.128906, 5.53125);
            cr.CurveTo(226.753906, 3.128906, 224.109375, 1.761719, 221.367188, 2.03125);
            cr.CurveTo(138.046875, 10.378906, 77.207031, 65.949219, 65.320313, 140.929688);
            cr.CurveTo(63, 140.289063, 60.777344, 139.421875, 58.710938, 138.328125);
            cr.CurveTo(53.886719, 136.289063, 48.582031, 135.171875, 43.007813, 135.171875);
            cr.CurveTo(30.855469, 135.171875, 19.148438, 140.761719, 11.480469, 150.214844);
            cr.CurveTo(-8.5625, 174.914063, 5.941406, 214.902344, 25.253906, 235.445313);
            cr.CurveTo(37.945313, 248.945313, 55.433594, 258, 74.164063, 258);
            cr.CurveTo(104.167969, 258, 129.492188, 235.398438, 140.183594, 208.445313);
            cr.CurveTo(146.332031, 192.9375, 149.386719, 172.65625, 141.4375, 157.230469);
            cr.CurveTo(134.746094, 144.242188, 121.265625, 135.675781, 106.691406, 135.191406);
            cr.CurveTo(106.234375, 135.179688, 105.78125, 135.171875, 105.324219, 135.171875);
            cr.CurveTo(99.75, 135.171875, 94.445313, 136.289063, 89.621094, 138.328125);
            cr.CurveTo(86.5, 139.980469, 83.039063, 141.128906, 79.359375, 141.710938);
            cr.CurveTo(90.097656, 78.421875, 139.261719, 30.488281, 207.558594, 18.101563);
            cr.CurveTo(187.808594, 50.199219, 177.347656, 87.269531, 177.390625, 125.039063);
            cr.CurveTo(174.914063, 124.390625, 172.5625, 123.480469, 170.378906, 122.328125);
            cr.CurveTo(165.554688, 120.289063, 160.25, 119.171875, 154.675781, 119.171875);
            cr.CurveTo(143.988281, 119.171875, 134.277344, 123.320313, 127.027344, 130.078125);
            cr.CurveTo(128.4375, 128.765625, 144.351563, 139.800781, 150.964844, 154.019531);
            cr.CurveTo(155.550781, 163.875, 156.636719, 178.113281, 155.175781, 190.300781);
            cr.CurveTo(152.808594, 210.085938, 143.160156, 225.390625, 143.019531, 225.269531);
            cr.CurveTo(154.976563, 235.5625, 169.78125, 242, 185.835938, 242);
            cr.CurveTo(216.273438, 242, 241.867188, 218.761719, 252.300781, 191.285156);
            cr.CurveTo(255.882813, 181.851563, 258.300781, 170.648438, 257.777344, 159.910156);
            cr.ClosePath();
            cr.MoveTo(36.277344, 186);
            cr.CurveTo(28.570313, 186, 22.320313, 179.730469, 22.320313, 172);
            cr.CurveTo(22.320313, 164.269531, 28.570313, 158, 36.277344, 158);
            cr.CurveTo(43.984375, 158, 50.234375, 164.269531, 50.234375, 172);
            cr.CurveTo(50.234375, 179.730469, 43.984375, 186, 36.277344, 186);
            cr.ClosePath();
            cr.FillPreserve();
        }
    }
}