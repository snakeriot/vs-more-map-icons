using Cairo;

namespace MoreMapIcons
{
    /**
     * Icon of the reeds.
     **/
    public class ReedsIcon : Icon
    {
        public float getHeight()
        {
            return 512;
        }

        public float getWidth()
        {
            return 512;
        }

        /**
        * Draw my reeds.
        *
        * @param context - {@link Context}
        **/
        public void Render(Context cr)
        {
            cr.NewPath();
            cr.MoveTo(480.601563, 460.199219);
            cr.LineTo(422.5, 460.199219);
            cr.LineTo(422.5, 439.800781);
            cr.CurveTo(431.5, 415.398438, 455.898438, 370.101563, 482.199219, 368);
            cr.CurveTo(493.398438, 367.101563, 501.800781, 357.199219, 500.898438, 346);
            cr.CurveTo(500, 334.800781, 490.199219, 326.199219, 478.898438, 327.300781);
            cr.CurveTo(455.898438, 329.199219, 437.101563, 342.601563, 422.398438, 359.199219);
            cr.LineTo(422.398438, 302.5);
            cr.CurveTo(450.601563, 293.800781, 471.101563, 267.5, 471.101563, 236.5);
            cr.LineTo(471.101563, 106.300781);
            cr.CurveTo(471.101563, 75.300781, 450.601563, 49, 422.398438, 40.300781);
            cr.LineTo(422.398438, 31.398438);
            cr.CurveTo(422.398438, 20.101563, 413.300781, 11, 402, 11);
            cr.CurveTo(390.699219, 11, 381.601563, 20.101563, 381.601563, 31.398438);
            cr.LineTo(381.601563, 40.300781);
            cr.CurveTo(353.398438, 49, 332.898438, 75.300781, 332.898438, 106.300781);
            cr.LineTo(332.898438, 236.5);
            cr.CurveTo(332.898438, 267.5, 353.398438, 293.800781, 381.601563, 302.5);
            cr.LineTo(381.601563, 376.800781);
            cr.CurveTo(369.300781, 363.199219, 353.898438, 353.398438, 335, 353.398438);
            cr.CurveTo(319.898438, 353.398438, 312.601563, 363.5, 313.101563, 374.699219);
            cr.CurveTo(313.601563, 386, 323.199219, 394.601563, 334.398438, 394.199219);
            cr.CurveTo(351.898438, 393.5, 370.5, 429.5, 379.699219, 460.101563);
            cr.LineTo(127.5, 460.101563);
            cr.LineTo(127.5, 439.699219);
            cr.CurveTo(136.5, 415.300781, 160.898438, 370, 187.199219, 367.898438);
            cr.CurveTo(198.398438, 367, 206.800781, 357.101563, 205.898438, 345.898438);
            cr.CurveTo(205, 334.699219, 195.199219, 326.101563, 183.898438, 327.199219);
            cr.CurveTo(160.898438, 329.101563, 142.101563, 342.5, 127.398438, 359.101563);
            cr.LineTo(127.398438, 302.398438);
            cr.CurveTo(155.601563, 293.699219, 176.101563, 267.398438, 176.101563, 236.398438);
            cr.LineTo(176.101563, 106.300781);
            cr.CurveTo(176.101563, 75.300781, 155.601563, 49, 127.398438, 40.300781);
            cr.LineTo(127.398438, 31.398438);
            cr.CurveTo(127.398438, 20.101563, 118.300781, 11, 107, 11);
            cr.CurveTo(95.699219, 11, 86.601563, 20.101563, 86.601563, 31.398438);
            cr.LineTo(86.601563, 40.300781);
            cr.CurveTo(58.398438, 49, 37.898438, 75.300781, 37.898438, 106.300781);
            cr.LineTo(37.898438, 236.5);
            cr.CurveTo(37.898438, 267.5, 58.398438, 293.800781, 86.601563, 302.5);
            cr.LineTo(86.601563, 376.800781);
            cr.CurveTo(74.300781, 363.199219, 58.898438, 353.398438, 40, 353.398438);
            cr.CurveTo(24.898438, 353.398438, 17.601563, 363.5, 18.101563, 374.699219);
            cr.CurveTo(18.601563, 386, 28.199219, 394.601563, 39.398438, 394.199219);
            cr.CurveTo(56.898438, 393.5, 75.5, 429.5, 84.699219, 460.101563);
            cr.LineTo(31.398438, 460.101563);
            cr.CurveTo(20.101563, 460.101563, 11, 469.199219, 11, 480.5);
            cr.CurveTo(11, 491.800781, 20.101563, 500.898438, 31.398438, 500.898438);
            cr.LineTo(480.601563, 500.898438);
            cr.CurveTo(491.898438, 500.898438, 501, 491.800781, 501, 480.5);
            cr.CurveTo(489.800781, 471.398438, 480.699219, 460.101563, 480.699219, 460.101563);
            cr.ClosePath();
            cr.MoveTo(373.800781, 106.300781);
            cr.CurveTo(373.800781, 90.699219, 386.5, 78, 402.101563, 78);
            cr.CurveTo(417.699219, 78, 430.398438, 90.699219, 430.398438, 106.300781);
            cr.LineTo(430.398438, 236.5);
            cr.CurveTo(430.398438, 252.101563, 417.699219, 264.800781, 402.101563, 264.800781);
            cr.CurveTo(386.5, 264.800781, 373.800781, 252.101563, 373.800781, 236.5);
            cr.ClosePath();
            cr.MoveTo(78.800781, 106.300781);
            cr.CurveTo(63.199219, 119, 50.5, 134.601563, 50.5, 121.898438);
            cr.CurveTo(50.5, 150.199219, 63.199219, 150.199219, 78.800781, 150.199219);
            cr.LineTo(78.800781, 280.398438);
            cr.CurveTo(78.800781, 296, 66.101563, 308.699219, 50.5, 308.699219);
            cr.CurveTo(34.898438, 308.699219, 22.199219, 296, 22.199219, 280.398438);
            cr.LineTo(22.199219, 150.199219);
            cr.ClosePath();
            cr.FillPreserve();
        }
    }
}